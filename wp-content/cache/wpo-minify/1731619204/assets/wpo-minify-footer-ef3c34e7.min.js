
"use strict";var botiga=botiga||{};botiga.ajaxSearch={ajax:function(e,t,a,n){var r;(r=new XMLHttpRequest).open("POST",botiga.ajaxurl,!0),r.setRequestHeader("Content-type","application/x-www-form-urlencoded"),r.onload=function(){200<=this.status&&this.status<400&&n.apply(this)};var o="";a=Object.entries(a);for(var c=0;c<a.length;c++)o+="&"+a[c].join("=");r.send("action="+e+"&nonce="+t+o)},init:function(){var t=this,a=this,n=document.querySelectorAll(".wc-search-field, .wc-block-product-search__field");if(n.length){for(var e=0;e<n.length;e++)!function(e){n[e].setAttribute("autocomplete","off"),n[e].addEventListener("keyup",t.debounce(function(){a.searchFormHandler(n[e])},300)),n[e].addEventListener("focus",t.debounce(function(){a.searchFormHandler(n[e])},300))}(e);document.addEventListener("click",function(e){null===e.target.closest(".botiga-ajax-search__wrapper")&&a.destroy()})}},searchFormHandler:function(a){if(a.value.length<3)return!1;var n=this,e=a.value,t=a.classList,t=t.contains("wc-block-product-search__field")||t.contains("wc-search-field")?"product":"post";n.ajax("botiga_ajax_search_callback",botiga_ajax_search.nonce,{search_term:e,type:t},function(){var e=JSON.parse(this.response),t=a.parentNode.getElementsByClassName("botiga-ajax-search__wrapper")[0];void 0===t&&((t=document.createElement("div")).className="botiga-ajax-search__wrapper",a.parentNode.append(t),a.parentNode.classList.add("botiga-ajax-search")),t.innerHTML=e.output;e=document.querySelector(".botiga-ajax-search-products");null!==e&&n.scrollbarVisible(e)&&e.classList.add("has-scrollbar"),n.elementIsOutOfScreenHorizontal(t)&&t.classList.add("reverse"),window.dispatchEvent(new Event("botiga.ajax.search.results.loaded"))})},destroy:function(){var e=document.querySelectorAll(".botiga-ajax-search__wrapper");if(e.length)for(var t=0;t<e.length;t++)e[t].remove()},debounce:function(n,r){var o=null;return function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];window.clearTimeout(o),o=window.setTimeout(function(){n.apply(null,t)},r)}},scrollbarVisible:function(e){return e.scrollHeight>e.clientHeight},elementIsOutOfScreenHorizontal:function(e){e=e.getBoundingClientRect();return e.x+e.width>window.innerWidth}},jQuery(document).ready(function(){botiga.ajaxSearch.init()});



(function($){$.snowfall=function(element,options){var defaults={flakeCount:35,flakeColor:'#ffffff',flakeIndex:999999,minSize:1,maxSize:2,minSpeed:1,maxSpeed:5,round:!1,shadow:!1,collection:!1,collectionHeight:40,deviceorientation:!1},options=$.extend(defaults,options),random=function random(min,max){return Math.round(min+Math.random()*(max-min))};$(element).data("snowfall",this);function Flake(_x,_y,_size,_speed,_id){this.id=_id;this.x=_x;this.y=_y;this.size=_size;this.speed=_speed;this.step=0;this.stepSize=random(1,10)/100;if(options.collection){this.target=canvasCollection[random(0,canvasCollection.length-1)]}
var flakeMarkup=$(document.createElement("div")).attr({'class':'snowfall-flakes','id':'flake-'+this.id}).css({'width':this.size,'height':this.size,'background':options.flakeColor,'position':'absolute','top':this.y,'left':this.x,'fontSize':0,'zIndex':options.flakeIndex});if($(element).get(0).tagName===$(document).get(0).tagName){$('body').append(flakeMarkup);element=$('body')}else{$(element).append(flakeMarkup)}
this.element=document.getElementById('flake-'+this.id);this.update=function(){this.y+=this.speed;if(this.y>(elHeight)-(this.size+6)){this.reset()}
this.element.style.top=this.y+'px';this.element.style.left=this.x+'px';this.step+=this.stepSize;if(doRatio===!1){this.x+=Math.cos(this.step)}else{this.x+=(doRatio+Math.cos(this.step))}
if(options.collection){if(this.x>this.target.x&&this.x<this.target.width+this.target.x&&this.y>this.target.y&&this.y<this.target.height+this.target.y){var ctx=this.target.element.getContext("2d"),curX=this.x-this.target.x,curY=this.y-this.target.y,colData=this.target.colData;if(colData[parseInt(curX)][parseInt(curY+this.speed+this.size)]!==undefined||curY+this.speed+this.size>this.target.height){if(curY+this.speed+this.size>this.target.height){while(curY+this.speed+this.size>this.target.height&&this.speed>0){this.speed*=.5}
ctx.fillStyle="#fff";if(colData[parseInt(curX)][parseInt(curY+this.speed+this.size)]==undefined){colData[parseInt(curX)][parseInt(curY+this.speed+this.size)]=1;ctx.fillRect(curX,(curY)+this.speed+this.size,this.size,this.size)}else{colData[parseInt(curX)][parseInt(curY+this.speed)]=1;ctx.fillRect(curX,curY+this.speed,this.size,this.size)}
this.reset()}else{this.speed=1;this.stepSize=0;if(parseInt(curX)+1<this.target.width&&colData[parseInt(curX)+1][parseInt(curY)+1]==undefined){this.x++}else if(parseInt(curX)-1>0&&colData[parseInt(curX)-1][parseInt(curY)+1]==undefined){this.x--}else{ctx.fillStyle="#fff";ctx.fillRect(curX,curY,this.size,this.size);colData[parseInt(curX)][parseInt(curY)]=1;this.reset()}}}}}
if(this.x>(elWidth)-widthOffset||this.x<widthOffset){this.reset()}}
this.reset=function(){this.y=0;this.x=random(widthOffset,elWidth-widthOffset);this.stepSize=random(1,10)/100;this.size=random((options.minSize*100),(options.maxSize*100))/100;this.speed=random(options.minSpeed,options.maxSpeed)}}
var flakes=[],flakeId=0,i=0,elHeight=$(element).height(),elWidth=$(element).width(),widthOffset=0,snowTimeout=0;if(options.collection!==!1){var testElem=document.createElement('canvas');if(!!(testElem.getContext&&testElem.getContext('2d'))){var canvasCollection=[],elements=$(options.collection),collectionHeight=options.collectionHeight;for(var i=0;i<elements.length;i++){var bounds=elements[i].getBoundingClientRect(),canvas=document.createElement('canvas'),collisionData=[];if(bounds.top-collectionHeight>0){document.body.appendChild(canvas);canvas.style.position='absolute';canvas.height=collectionHeight;canvas.width=bounds.width;canvas.style.left=bounds.left+'px';canvas.style.top=bounds.top-collectionHeight+'px';for(var w=0;w<bounds.width;w++){collisionData[w]=[]}
canvasCollection.push({element:canvas,x:bounds.left,y:bounds.top-collectionHeight,width:bounds.width,height:collectionHeight,colData:collisionData})}}}else{options.collection=!1}}
if($(element).get(0).tagName===$(document).get(0).tagName){widthOffset=25}
$(window).bind("resize",function(){elHeight=$(element).height();elWidth=$(element).width()});for(i=0;i<options.flakeCount;i+=1){flakeId=flakes.length;flakes.push(new Flake(random(widthOffset,elWidth-widthOffset),random(0,elHeight),random((options.minSize*100),(options.maxSize*100))/100,random(options.minSpeed,options.maxSpeed),flakeId))}
if(options.round){$('.snowfall-flakes').css({'-moz-border-radius':options.maxSize,'-webkit-border-radius':options.maxSize,'border-radius':options.maxSize})}
if(options.shadow){$('.snowfall-flakes').css({'-moz-box-shadow':'1px 1px 1px #555','-webkit-box-shadow':'1px 1px 1px #555','box-shadow':'1px 1px 1px #555'})}
var doRatio=!1;if(options.deviceorientation){$(window).bind('deviceorientation',function(event){doRatio=event.originalEvent.gamma*0.1})}
function snow(){for(i=0;i<flakes.length;i+=1){flakes[i].update()}
snowTimeout=setTimeout(function(){snow()},30)}
snow();this.clear=function(){$(element).children('.snowfall-flakes').remove();flakes=[];clearTimeout(snowTimeout)}};$.fn.snowfall=function(options){if(typeof(options)=="object"||options==undefined){return this.each(function(i){(new $.snowfall(this,options))})}else if(typeof(options)=="string"){return this.each(function(i){var snow=$(this).data('snowfall');if(snow){snow.clear()}})}}})(jQuery);



(function($){$.fn.snow=function(options){var $flake=$('<div class="we-flake" />').css({'position':'absolute','top':'0px','bottom':'0px','z-index':'999999'}),documentHeight=$(document).height(),documentWidth=$(document).width(),defaults={flakeChar:"&#10054;",minSize:10,maxSize:20,newOn:500,flakeColor:["#ffffff"],durationMillis:null},options=$.extend({},defaults,options);$flake.html(options.flakeChar);var interval=setInterval(function(){var startPositionLeft=Math.random()*documentWidth-100,startOpacity=0.5+Math.random(),sizeFlake=options.minSize+Math.random()*options.maxSize,endPositionTop=documentHeight-defaults.maxSize-40,endPositionLeft=startPositionLeft-100+Math.random()*200,durationFall=documentHeight*10+Math.random()*5000;$flake.clone().appendTo('body').css({left:startPositionLeft,opacity:startOpacity,'font-size':sizeFlake,color:options.flakeColor[Math.floor((Math.random()*options.flakeColor.length))]}).animate({top:endPositionTop,left:endPositionLeft,opacity:0.2},durationFall,'linear',function(){$(this).remove()})},options.newOn);if(options.durationMillis){setTimeout(function(){removeInterval(interval)},options.durationMillis)}}})(jQuery);



Date.now || (Date.now = function() {
		return (new Date()).getTime()
}),
	function() {
		"use strict";
		for (var e = ["webkit", "moz"], t = 0; t < e.length && ! window.requestAnimationFrame; ++t) {
			var i                        = e[t];
			window.requestAnimationFrame = window[i + "RequestAnimationFrame"], window.cancelAnimationFrame = window[i + "CancelAnimationFrame"] || window[i + "CancelRequestAnimationFrame"]
		}
		if (/iP(ad|hone|od).*OS 6/.test( window.navigator.userAgent ) || ! window.requestAnimationFrame || ! window.cancelAnimationFrame) {
			var n                          = 0;
			window.requestAnimationFrame   = function(e) {
				var t = Date.now(),
					i = Math.max( n + 16, t );
				return setTimeout(
					function() {
						e( n = i )
					},
					i - t
				)
			}, window.cancelAnimationFrame = clearTimeout
		}
	}();
	var snowFall      = function() {
		function e() {
			var e = {
				flakeCount: 35,
				flakeColor: "#ffffff",
				flakeIndex: 999999,
				flakePosition: "absolute",
				minSize: 1,
				maxSize: 2,
				minSpeed: 1,
				maxSpeed: 2,
				round: ! 1,
				shadow: ! 1,
				collection: ! 1,
				image: ! 1,
				collectionHeight: 40
			},
			t     = [],
			n     = {},
			o     = 0,
			s     = 0,
			a     = 0,
			r     = 0,
			l     = function(e, t) {
				for (var i in t) {
					e.hasOwnProperty( i ) && (e[i] = t[i])
				}
			},
			h     = function(e, t) {
				e.style.webkitTransform = t, e.style.MozTransform = t, e.style.msTransform = t, e.style.OTransform = t, e.style.transform = t
			},
			m     = function(e, t) {
				return Math.round( e + Math.random() * (t - e) )
			},
			f     = function(e, t) {
				for (var i in t) {
					e.style[i] = t[i] + ("width" == i || "height" == i ? "px" : "")
				}
			},
			d     = function(t, i, n) {
				this.x = m( a, s - a ), this.y = m( 0, o ), this.size = i, this.speed = n, this.step = 0, this.stepSize = m( 1, 10 ) / 100, e.collection && (this.target = canvasCollection[m( 0, canvasCollection.length - 1 )]);
				var r  = null;
				e.image ? (r = new Image(), r.src = e.image) : (r = document.createElement( "div" ), f(
					r,
					{
						background: e.flakeColor
					}
				)), r.className                   = "snowfall-flakes", f(
					r,
					{
						width: this.size,
						height: this.size,
						position: e.flakePosition,
						top: 0,
						left: 0,
						"will-change": "transform",
						fontSize: 0,
						zIndex: e.flakeIndex
						}
				), e.round && f(
					r,
					{
						"-moz-border-radius": ~~e.maxSize + "px",
						"-webkit-border-radius": ~~e.maxSize + "px",
						borderRadius: ~~e.maxSize + "px"
						}
				), e.shadow && f(
					r,
					{
						"-moz-box-shadow": "1px 1px 1px #555",
						"-webkit-box-shadow": "1px 1px 1px #555",
						boxShadow: "1px 1px 1px #555"
						}
				), t.tagName === document.body.tagName ? document.body.appendChild( r ) : t.appendChild( r ), this.element = r, this.update = function() {
						this.y += this.speed, this.y > o - (this.size + 6) && this.reset(), h( this.element, "translateY(" + this.y + "px) translateX(" + this.x + "px)" ), this.step += this.stepSize, this.x += Math.cos( this.step ), (this.x + this.size > s - a || this.x < a) && this.reset()
				}, this.reset = function() {
					this.y = 0, this.x = m( a, s - a ), this.stepSize = m( 1, 10 ) / 100, this.size = m( 100 * e.minSize, 100 * e.maxSize ) / 100, this.element.style.width = this.size + "px", this.element.style.height = this.size + "px", this.speed = m( e.minSpeed, e.maxSpeed )
				}
			},
			w     = function() {
				for (var e = 0; e < t.length; e += 1) {
					t[e].update();
				}
				r                                = requestAnimationFrame(
					function() {
						w()
					}
				)
			};
			return {
				snow: function(r, h) {
					for (l( e, h ), n = r, o = n.offsetHeight, s = n.offsetWidth, n.snow = this, "body" === n.tagName.toLowerCase() && (a = 25), window.addEventListener(
						"resize",
						function() {
							o = n.clientHeight, s = n.offsetWidth
						},
						! 0
					), i = 0; i < e.flakeCount; i += 1) {
						t.push( new d( n, m( 100 * e.minSize, 100 * e.maxSize ) / 100, m( e.minSpeed, e.maxSpeed ) ) );
					}
					w()
				},
				clear: function() {
					var e = null;
					e     = n.getElementsByClassName ? n.getElementsByClassName( "snowfall-flakes" ) : n.querySelectorAll( ".snowfall-flakes" );
					for (var t = e.length; t--;) {
						e[t].parentNode === n && n.removeChild( e[t] );
					}
					cancelAnimationFrame( r )
				}
			}
		}
		return {
			snow: function(t, i) {
				if ("string" == typeof i) {
					if (t.length > 0) {
						for (var n = 0; n < t.length; n++) {
							t[n].snow && t[n].snow.clear();
						} } else {
						t.snow.clear();
						} } else if (t.length > 0) {
					for (var n = 0; n < t.length; n++) {
						( new e() ).snow( t[n], i );
					} } else {
							(new e()).snow( t, i )
					}
			}
		}
	}();


